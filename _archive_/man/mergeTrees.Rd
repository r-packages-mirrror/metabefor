% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mergeTrees.R
\name{mergeTrees}
\alias{mergeTrees}
\title{Merge two Rxs trees (\code{data.tree} nodes)}
\usage{
mergeTrees(
  tree1,
  tree2,
  sourceId,
  filename1,
  filename2,
  spaces = 2,
  silent = metabefor::opts$get("silent")
)
}
\arguments{
\item{tree1, tree2}{The trees to merge.}

\item{sourceId, filename1, filename2}{The identifier of the source and the
original file names of the extraction scripts.}

\item{spaces}{The number of spaces to use in messages (if \code{silent = metabefor::opts$get("silent")})}

\item{silent}{Whether to be silent or chatty.}
}
\value{
The merged tree, a (cloned) \code{data.tree} \code{Node} object.
}
\description{
Note this this function is used internally and was written to merge Rxs
trees (hence the name), so it may not fit other use cases: for example,
when merging two leaf nodes with the same name and path, if the \code{value}
attribute is a list, those lists are combined using \code{\link[base:c]{base::c()}}.
}
\examples{
### Load an example Rxs project
data('example_rxsProject_1', package="metabefor");

### Look at the names of the original, raw trees:
names(
  example_rxsProject_1$rxsTrees_raw
);

### Look at the tree for the first module
example_rxsProject_1$rxsTrees_raw[[
  'rxs_minimal_example_module1--complete_1.rxs.Rmd'
]];

### Look at the tree for the second module
example_rxsProject_1$rxsTrees_raw[[
  'rxs_minimal_example_module2--complete_1.rxs.Rmd'
]];

### Merge them
mergedRxsTree <-
  metabefor::mergeTrees(
    tree1 =
      example_rxsProject_1$rxsTrees_raw[[
        'rxs_minimal_example_module1--complete_1.rxs.Rmd'
      ]],
    tree2 = 
      example_rxsProject_1$rxsTrees_raw[[
        'rxs_minimal_example_module2--complete_1.rxs.Rmd'
      ]],
  );

### View merged tree
mergedRxsTree;
}
