% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/supplement_data_with_value_inSingleNode.R,
%   R/supplement_data_with_value_inStudyTrees.R
\name{supplement_data_with_value_inSingleNode}
\alias{supplement_data_with_value_inSingleNode}
\alias{supplement_data_with_value_inStudyTrees}
\title{Supplement a target entitity node with a value from another entity node}
\usage{
supplement_data_with_value_inSingleNode(
  studyTree,
  targetEntityNodeId,
  sourceEntityNodeId,
  forceCopyingOfExistingValues = FALSE,
  sourcePathString_regex = NULL,
  targetPathString_regex = NULL,
  targetNodeListCreation_prefix = "",
  targetNodeListCreation_suffix = "_value",
  prefix = "supplemented_",
  suffix = "",
  silent = metabefor::opts$get("silent")
)

supplement_data_with_value_inStudyTrees(
  studies,
  sourceEntityNodeId,
  targetEntityNodeId = NULL,
  targetEntityNode_requiredField = NULL,
  forceCopyingOfExistingValues = FALSE,
  sourcePathString_regex = NULL,
  targetPathString_regex = NULL,
  targetNodeListCreation_prefix = "",
  targetNodeListCreation_suffix = "_value",
  prefix = "supplemented_",
  suffix = "",
  silent = metabefor::opts$get("silent")
)
}
\arguments{
\item{studyTree, studies}{The study tree or the \code{studies} object.}

\item{targetEntityNodeId}{The identifier of the target entity node (the
entity node to supplement)}

\item{sourceEntityNodeId}{The identifier of the source entity node.}

\item{forceCopyingOfExistingValues}{Whether to force copying (and so
overwriting) existing values if encountered in the target entity. If
\code{FALSE}, existing values will not be overwritten.}

\item{sourcePathString_regex, targetPathString_regex}{Regular expressions
that must match the path string of the source of target node.}

\item{targetNodeListCreation_prefix, targetNodeListCreation_suffix}{A prefix
and suffix to add when a list is created.}

\item{prefix, suffix}{A text string to prepend and append to the entity
identifier when copying it to the target entity.}

\item{silent}{Whether to be quiet or chatty.}

\item{targetEntityNode_requiredField}{A required field that, if it does not
occur in the target entity, causes that target entity to be skipped. This
provides additional control over which target entities to process.}
}
\value{
Invisibly, the (altered) study tree - but note that since
the \code{data.tree} package uses \code{R6}'s pass-by-reference semantics, that object
is altered in place, and sothe returned object can be discarded.
}
\description{
This function supplements an entity node with a value from another entity
node. Note that the source entity \emph{cannot be} a clustering entity (i.e.
the value stored for that entity must be a single value); and the target
entity \emph{must} be a clustering entity (i.e. the value stored for that entity
must be a list of values for clustered entities).
Whereas for \code{supplement_data_with_value_inSingleNode()}, you have to specify
the entity identifier for the entity you want to supplement, for
\code{supplement_data_with_value_inStudyTrees()}, use \code{targetPathString_regex} to
specify which entities you would like to supplement (i.e. copy the relevant
value to). Of course, this can also be an entity identifier if you only want
to copy to a single entity but in all study trees in an object with parsed
Rxs files.
}
