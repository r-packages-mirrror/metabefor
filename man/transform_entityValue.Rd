% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform_entityValue.R
\name{transform_entityValue}
\alias{transform_entityValue}
\title{Perform a transformation selectively}
\usage{
transform_entityValue(
  studies,
  fun,
  entityValue_argName = "x",
  entityId_regex = NULL,
  newEntityName_prefix = "",
  newEntityName_suffix = "_trfmd",
  funArgs = NULL,
  requiredField_regex = NULL
)
}
\arguments{
\item{studies}{The \code{studies} object (as produced
by \code{\link[=rxs_parseExtractionScripts]{rxs_parseExtractionScripts()}}).}

\item{fun}{The function to apply.}

\item{entityValue_argName}{The argument name to pass the entity value as.}

\item{entityId_regex}{An optional regular expression: if specified, only
entity nodes with entity identifiers that match this regular expression will
be processed.}

\item{newEntityName_prefix, newEntityName_suffix}{The prefix and suffix to
add to the entity identifier to create the name of the new entity that is
created. That entity is added as a sibling of the target entity.}

\item{funArgs}{Additional arguments, as a names list with each element's
name is the argument name and the element itself the content.}

\item{The}{name of the new entity to add to the target
entity's parent entity (a container entity).}
}
\value{
Invisibly, the studies object. Note that the study trees will be
changed in place given \code{data.tree}'s pass-by-reference logic; so you can
discard the result.
}
\description{
This function takes a \code{studies} object (as produced
by \code{\link[=rxs_parseExtractionScripts]{rxs_parseExtractionScripts()}}) and processes all study
trees, looking for entities that match the \code{entityId_regex}
regular expression (for information about what clustering entities are,
see \url{https://r-packages.gitlab.io/metabefor/articles/definitions.html})
and passes those to function \code{fun}, passing the entity's value as the
argument named in \code{entityValue_argName} and with \code{funArgs} as additional
arguments.
}
