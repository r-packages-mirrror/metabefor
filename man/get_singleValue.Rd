% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_singleValue.R
\name{get_singleValue_fromTree}
\alias{get_singleValue_fromTree}
\alias{get_singleValue_fromTreeList}
\alias{get_singleValue}
\title{Get a single value from a study tree, list of trees, or studies object}
\usage{
get_singleValue_fromTree(
  x,
  entityId,
  lookInValueLists = TRUE,
  returnDf = FALSE,
  flattenVectorsInDf = TRUE,
  pathString_regex_flatten = NULL,
  pathString_regex_explode = NULL,
  fieldname_regex_alwaysFlatten = NULL,
  returnLongDf = TRUE,
  pathString_regex_select = ".*",
  silent = metabefor::opts$get("silent")
)

get_singleValue_fromTreeList(
  x,
  entityId,
  returnDf = TRUE,
  nullValue = 0,
  naValue = NULL,
  flattenVectorsInDf = TRUE,
  warningValues = list(NULL, NA),
  warningFunctions = NULL,
  pathString_regex_select = ".*",
  pathString_regex_flatten = NULL,
  pathString_regex_explode = NULL,
  fieldname_regex_alwaysFlatten = NULL,
  returnLongDf = TRUE,
  silent = metabefor::opts$get("silent")
)

get_singleValue(
  x,
  entityId,
  returnDf = TRUE,
  flattenVectorsInDf = TRUE,
  returnLongDf = TRUE,
  pathString_regex_select = ".*",
  pathString_regex_flatten = NULL,
  pathString_regex_explode = NULL,
  fieldname_regex_alwaysFlatten = NULL,
  silent = metabefor::opts$get("silent")
)
}
\arguments{
\item{x}{}

\item{entityId}{The entity identifier of the value to get}

\item{lookInValueLists}{Whether to also look inside value lists}

\item{returnDf}{Whether to return a data frame or not}

\item{flattenVectorsInDf}{The default action to apply for values not matching
one of \code{pathString_regex_flatten} and \code{pathString_regex_explode}: to flatten
by default, pass \code{TRUE}; to explode by default, pass \code{FALSE}.}

\item{pathString_regex_flatten, pathString_regex_explode}{Regular expressions
matched against each entity node's path string (i.e. its path from the root,
delimited by slashes). Vectors in entity nodes matching
\code{pathString_regex_flatten} will be flattened into a single character
string value; vectors in entity nodes matching \code{pathString_regex_explode}
will be exploded into multiple rows.}

\item{fieldname_regex_alwaysFlatten}{A regular expression to force
flattening of fields regardless of matching to other regular expressions.}

\item{pathString_regex_select}{Regex that the target entities' path strings
have to match (otherwise, the entity is excluded)}
}
\value{
A list or a dataframe (if \code{returnDf} is \code{TRUE})
}
\description{
Get a single value from a study tree, list of trees, or studies object
}
\examples{

}
