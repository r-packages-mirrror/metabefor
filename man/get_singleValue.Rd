% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_singleValue.R
\name{get_singleValue_fromTree}
\alias{get_singleValue_fromTree}
\alias{get_singleValue_fromTreeList}
\alias{get_singleValue}
\title{Get a single value from a study tree, list of trees, or studies object}
\usage{
get_singleValue_fromTree(
  x,
  entityId,
  lookInValueLists = TRUE,
  returnDf = FALSE,
  flattenVectorsInDf = TRUE,
  returnLongDf = TRUE,
  pathString_regex = ".*",
  silent = metabefor::opts$get("silent")
)

get_singleValue_fromTreeList(
  x,
  entityId,
  returnDf = TRUE,
  nullValue = 0,
  naValue = NULL,
  flattenVectorsInDf = TRUE,
  warningValues = list(NULL, NA),
  warningFunctions = NULL,
  pathString_regex = ".*",
  returnLongDf = TRUE,
  silent = metabefor::opts$get("silent")
)

get_singleValue(
  x,
  entityId,
  returnDf = TRUE,
  flattenVectorsInDf = TRUE,
  returnLongDf = TRUE,
  pathString_regex = ".*",
  silent = metabefor::opts$get("silent")
)
}
\arguments{
\item{x}{}

\item{entityId}{The entity identifier of the value to get}

\item{lookInValueLists}{Whether to also look inside value lists}

\item{returnDf}{Whether to return a data frame or not}

\item{flattenVectorsInDf}{When returning a data frame, whether to flatten
vectors into a single character string value, or whether to explode into
multiple rows.}

\item{pathString_regex}{Regex that the target entities' path strings have to
match (otherwise, the entity is excluded)}
}
\value{
A list or a dataframe (if \code{returnDf} is \code{TRUE})
}
\description{
Get a single value from a study tree, list of trees, or studies object
}
\examples{

}
