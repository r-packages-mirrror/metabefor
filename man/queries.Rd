% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_conceptTerms.R, R/query_full.R,
%   R/query_requiredConcepts.R, R/query_toInterfaceLang.R
\name{query_conceptTerms}
\alias{query_conceptTerms}
\alias{print.mbf_query_conceptTerms}
\alias{query_full}
\alias{print.mbf_query_full}
\alias{query_requiredConcepts}
\alias{print.mbf_query_requiredConcepts}
\alias{query_toInterfaceLang}
\alias{print.mbf_query_toInterfaceLang}
\title{Building queries}
\usage{
query_conceptTerms(..., conceptName = NULL, operator = "OR")

\method{print}{mbf_query_conceptTerms}(x, ...)

query_full(inclusion, exclusion = NULL, queryName = "query")

\method{print}{mbf_query_full}(x, ...)

query_requiredConcepts(..., conceptName = NULL)

\method{print}{mbf_query_requiredConcepts}(x, ...)

query_toInterfaceLang(queryObject, fields = "title", exclude = NULL)

\method{print}{mbf_query_toInterfaceLang}(x, header = "3", ...)
}
\arguments{
\item{...}{For the query building functions, the concepts or terms
to combine; for the \code{print} methods, the object to print.}

\item{operator}{The operator to use to combining concept terms.}

\item{inclusion}{The result of a call to \code{query_requiredConcepts}.}

\item{exclusion}{The result of a call to \code{query_conceptTerms}.}

\item{queryName, conceptName}{The name of the query or concept.}

\item{fields}{The fields in which to search; can currently
only include 'title', 'abstract', or both.}

\item{exclude}{Any terms to exclude as a character vector.}

\item{queryName}{The name of the query.}
}
\value{
\code{query_full} returns an \code{mbf_query_full} object;
\code{query_requiredConcepts} returns an \code{mbf_query_requiredConcepts}
object;
\code{query_conceptTerms} returns an \code{mbf_query_conceptTerms} object;
\code{query_toInterfaceLang} returns an \code{mbf_query_toInterfaceLang}
object; and the print methods return \code{x} invisibly.
}
\description{
This group of functions generates a symbolic representation of
a query that can then be translated to different interface
languages. A query is built by specifying, for each required
concept, a list of concept terms (e.g. synonyms), as well as the
relationship between the concepts (normally they all have to occur;
sometimes there are also a number of terms to exclude).
}
\details{
\code{query_full} combines required concepts with a concept to exclude using
the \code{NOT} operator.
\code{query_requiredConcepts} combines sets of concept terms for each concept
using the \code{AND} operator.
\code{query_conceptTerms} combines terms within one concept using the \code{OR}
operator.
A query can be translated to one or more interface languages with
\code{query_toInterfaceLang}.
}
\examples{
query_full(
  inclusion =
    query_requiredConcepts(
      conceptName = "inclusion",
      query_conceptTerms(
        conceptName="fluffiness",
        "fluffy",
        "hairy",
        "soft"),
      query_conceptTerms(
        conceptName="aggression",
        "aggressi*",
        "predator*",
        "kill*")),
  exclusion = 
    query_conceptTerms(
      conceptName = "exclude non-empirical work",
      "review",
      "meta-analysis"));
                         
}
